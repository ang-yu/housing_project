
setwd("~/Desktop/Research/Housing project/PSID_working")

library("haven")
library("dplyr")

options(scipen=999)

# df is the cross-year merged data of TAS, PSID individual file, and PSID family file for TAS interviwees
df <- read_dta("/Users/Ang/Desktop/Data/J266390/J266390.dta")
df <- as.data.frame(df)  # By default, the read_dta function creates a tbl_df object instead of regular dataframe

# ind <- read_dta("/Users/Ang/Desktop/Data/ind2017er/ind.dta")
# ind_keep <- c("ER30001","ER30002","ER34201","ER34101","ER34001","ER33901","ER33801","ER34301","ER34501","ER34203","ER34303","ER34503","ER34103","ER34003","ER33903","ER33803")
# ind <- ind[,colnames(ind) %in% ind_keep]
# ind <- as.data.frame(ind)
# save(ind, file = "ind_inuse.RData")
load("ind_inuse.RData")

# fam05 <- read_dta("/Users/Ang/Desktop/Data/fam2005er/fam2005.dta")
# fam05_keep <- c("ER25028","ER25002","ER25004","ER25014","ER25012")
# # ER25028: "own/rent or what"; ER25002: 2013 family ID; ER25004: current state; ER25014: int year; ER25012: int month
# fam05 <- fam05[,colnames(fam05) %in% fam05_keep]
# fam05 <- as.data.frame(fam05)
# save(fam05, file = "fam05_inuse.RData")
load("fam05_inuse.RData")

# fam07 <- read_dta("/Users/Ang/Desktop/Data/fam2007er/fam2007.dta")
# fam07_keep <- c("ER36028","ER36002","ER36004","ER36014","ER36012")
# # ER36028: "own/rent or what"; ER36002: 2013 family ID; ER36004: current state; ER36014: int year; ER36012: int month
# fam07 <- fam07[,colnames(fam07) %in% fam07_keep]
# fam07 <- as.data.frame(fam07)
# save(fam07, file = "fam07_inuse.RData")
load("fam07_inuse.RData")

# fam09 <- read_dta("/Users/Ang/Desktop/Data/fam2009er/fam2009.dta")
# fam09_keep <- c("ER42029","ER42002","ER42004","ER42014","ER42012")
# # ER42029: "own/rent or what"; ER42002: 2013 family ID; ER42004: current state; ER42014: int year; ER42012: int month
# fam09 <- fam09[,colnames(fam09) %in% fam09_keep]
# fam09 <- as.data.frame(fam09)
# save(fam09, file = "fam09_inuse.RData")
load("fam09_inuse.RData")

# fam11 <- read_dta("/Users/Ang/Desktop/Data/fam2011er/fam2011.dta")
# fam11_keep <- c("ER47329","ER47302","ER47304","ER47314","ER47312")
# # ER47329: "own/rent or what"; ER47302: 2013 family ID; ER47304: current state; ER47314: int year; ER47312: int month
# fam11 <- fam11[,colnames(fam11) %in% fam11_keep]
# fam11 <- as.data.frame(fam11)
# save(fam11, file = "fam11_inuse.RData")
load("fam11_inuse.RData")

# fam13 <- read_dta("/Users/Ang/Desktop/Data/fam2013er/fam2013.dta")
# fam13_keep <- c("ER53029","ER53002","ER53004","ER53014","ER53012")
# # ER53029: "own/rent or what"; ER53002: 2013 family ID; ER53004: current state; ER53014: int year; ER53012: int month
# fam13 <- fam13[,colnames(fam13) %in% fam13_keep]
# fam13 <- as.data.frame(fam13)
# save(fam13, file = "fam13_inuse.RData")
load("fam13_inuse.RData")

# fam15 <- read_dta("/Users/Ang/Desktop/Data/fam2015er/fam2015.dta")
# fam15_keep <- c("ER60030","ER60002","ER60004","ER60014","ER60012")
# fam15 <- fam15[,colnames(fam15) %in% fam15_keep]
# fam15 <- as.data.frame(fam15)
# save(fam15, file = "fam15_inuse.RData")
load("fam15_inuse.RData")

# fam17 <- read_dta("/Users/Ang/Desktop/Data/fam2017er/fam2017.dta")
# fam17_keep <- c("ER66030","ER66002","ER66004","ER66014","ER66012")
# fam17 <- fam17[,colnames(fam17) %in% fam17_keep]
# fam17 <- as.data.frame(fam17)
# save(fam17, file = "fam17_inuse.RData")
load("fam17_inuse.RData")

# then merge individual ID with family ID
# how many people in the individual file can be matched with a family in each year?
sum(ind$ER34201 %in% fam13$ER53002)
sum(ind$ER34301 %in% fam15$ER60002)
sum(ind$ER34501 %in% fam17$ER66002)

ind <- left_join(ind, fam05, by = c("ER33801" = "ER25002"))
ind <- left_join(ind, fam07, by = c("ER33901" = "ER36002"))
ind <- left_join(ind, fam09, by = c("ER34001" = "ER42002"))
ind <- left_join(ind, fam11, by = c("ER34101" = "ER47302"))
ind <- left_join(ind, fam13, by = c("ER34201" = "ER53002"))
ind <- left_join(ind, fam15, by = c("ER34301" = "ER60002"))
ind <- left_join(ind, fam17, by = c("ER34501" = "ER66002"))

# housing status variables

ind$own05 <- NA # Neither owns nor rents will ramain NA
ind$own05[ind$ER25028==5] <- 0   # renting
ind$own05[ind$ER25028==1] <- 1   # owning
ind$own05[ind$ER25028==8] <- 3  # neither

ind$own07 <- NA # Neither owns nor rents will ramain NA
ind$own07[ind$ER36028==5] <- 0   # renting
ind$own07[ind$ER36028==1] <- 1   # owning
ind$own07[ind$ER36028==8] <- 2   # neither

ind$own09 <- NA # Neither owns nor rents will ramain NA
ind$own09[ind$ER42029==5] <- 0   # renting
ind$own09[ind$ER42029==1] <- 1   # owning
ind$own09[ind$ER42029==8] <- 2 

ind$own11 <- NA # Neither owns nor rents will ramain NA
ind$own11[ind$ER47329==5] <- 0   # renting
ind$own11[ind$ER47329==1] <- 1   # owning
ind$own11[ind$ER47329==8] <- 1

ind$own13 <- NA # Neither owns nor rents will ramain NA
ind$own13[ind$ER53029==5] <- 0   # renting
ind$own13[ind$ER53029==1] <- 1   # owning
ind$own13[ind$ER53029==8] <- 2

ind$own15 <- NA # Neither owns nor rents will ramain NA
ind$own15[ind$ER60030==5] <- 0   # renting
ind$own15[ind$ER60030==1] <- 1   # owning
ind$own15[ind$ER60030==8] <- 2

ind$own17 <- NA # Neither owns nor rents will ramain NA
ind$own17[ind$ER66030==5] <- 0   # renting
ind$own17[ind$ER66030==1] <- 1   # owning
ind$own17[ind$ER66030==8] <- 2 

# head/wife/reference person status

ind$ref05 <- NA # Inap. will remain NA
ind$ref05[!ind$ER33803%in%c(10,20,22,0)] <- 0  
ind$ref05[ind$ER33803%in%c(10,20,22)] <- 1

ind$ref07 <- NA # Inap. will remain NA
ind$ref07[!ind$ER33903%in%c(10,20,22,0)] <- 0  
ind$ref07[ind$ER33903%in%c(10,20,22)] <- 1

ind$ref09 <- NA # Inap. will remain NA
ind$ref09[!ind$ER34003%in%c(10,20,22,0)] <- 0  
ind$ref09[ind$ER34003%in%c(10,20,22)] <- 1

ind$ref11 <- NA # Inap. will remain NA
ind$ref11[!ind$ER34103%in%c(10,20,22,0)] <- 0  
ind$ref11[ind$ER34103%in%c(10,20,22)] <- 1

ind$ref13 <- NA # Inap. will remain NA
ind$ref13[!ind$ER34203%in%c(10,20,22,0)] <- 0  
ind$ref13[ind$ER34203%in%c(10,20,22)] <- 1 # head, legal wife, "wife". 
# This I think is consistent with the head/wife status variable TA130011 in TAS

ind$ref15 <- NA 
ind$ref15[!ind$ER34303%in%c(10,20,22,0)] <- 0  
ind$ref15[ind$ER34303%in%c(10,20,22)] <- 1 # head, legal spouse, partner
# Again, this time consistent with TA150011 in TAS

ind$ref17 <- NA 
ind$ref17[!ind$ER34503%in%c(10,20,22,0)] <- 0  
ind$ref17[ind$ER34503%in%c(10,20,22)] <- 1 # Reference Person, legal spouse, partner  
# this time consistent with TA170006 in TAS

## independet renting status indicator
ind$inde_renting_05 <- NA
ind$inde_renting_05[!(ind$ref05==1 & ind$own05==0) & !is.na(ind$ref05) & !is.na(ind$own05)] <- 0  # not missing information, but not in independent renting
ind$inde_renting_05[ind$ref05==1 & ind$own05==0] <- 1  # independent renting (head/wife status + renting)

ind$inde_renting_07 <- NA
ind$inde_renting_07[!(ind$ref07==1 & ind$own07==0) & !is.na(ind$ref07) & !is.na(ind$own07)] <- 0  # not missing information, but not in independent renting
ind$inde_renting_07[ind$ref07==1 & ind$own07==0] <- 1  # independent renting (head/wife status + renting)

ind$inde_renting_09 <- NA
ind$inde_renting_09[!(ind$ref09==1 & ind$own09==0) & !is.na(ind$ref09) & !is.na(ind$own09)] <- 0  # not missing information, but not in independent renting
ind$inde_renting_09[ind$ref09==1 & ind$own09==0] <- 1  # independent renting (head/wife status + renting)

ind$inde_renting_11 <- NA
ind$inde_renting_11[!(ind$ref11==1 & ind$own11==0) & !is.na(ind$ref11) & !is.na(ind$own11)] <- 0  # not missing information, but not in independent renting
ind$inde_renting_11[ind$ref11==1 & ind$own11==0] <- 1  # independent renting (head/wife status + renting)

ind$inde_renting_13 <- NA
ind$inde_renting_13[!(ind$ref13==1 & ind$own13==0) & !is.na(ind$ref13) & !is.na(ind$own13)] <- 0  # not missing information, but not in independent renting
ind$inde_renting_13[ind$ref13==1 & ind$own13==0] <- 1  # independent renting (head/wife status + renting)

ind$inde_renting_15 <- NA
ind$inde_renting_15[!(ind$ref15==1 & ind$own15==0) & !is.na(ind$ref15) & !is.na(ind$own15)] <- 0  # not missing information, but not in independent renting
ind$inde_renting_15[ind$ref15==1 & ind$own15==0] <- 1  # independent renting (head/wife status + renting)

ind$inde_renting_17 <- NA
ind$inde_renting_17[!(ind$ref17==1 & ind$own17==0) & !is.na(ind$ref17) & !is.na(ind$own17)] <- 0  # not missing information, but not in independent renting
ind$inde_renting_17[ind$ref17==1 & ind$own17==0] <- 1  # independent renting (head/wife status + renting)

## independet owning status indicator

ind$inde_owning_05 <- NA
ind$inde_owning_05[!(ind$ref05==1 & ind$own05==1) & !is.na(ind$ref05) & !is.na(ind$own05)] <- 0  # not missing information, but not in independent owning
ind$inde_owning_05[ind$ref05==1 & ind$own05==1] <- 1  # independent owning (head/wife status + owning)

ind$inde_owning_07 <- NA
ind$inde_owning_07[!(ind$ref07==1 & ind$own07==1) & !is.na(ind$ref07) & !is.na(ind$own07)] <- 0  # not missing information, but not in independent owning
ind$inde_owning_07[ind$ref07==1 & ind$own07==1] <- 1  # independent owning (head/wife status + owning)

ind$inde_owning_09 <- NA
ind$inde_owning_09[!(ind$ref09==1 & ind$own09==1) & !is.na(ind$ref09) & !is.na(ind$own09)] <- 0  # not missing information, but not in independent owning
ind$inde_owning_09[ind$ref09==1 & ind$own09==1] <- 1  # independent owning (head/wife status + owning)

ind$inde_owning_11 <- NA
ind$inde_owning_11[!(ind$ref11==1 & ind$own11==1) & !is.na(ind$ref11) & !is.na(ind$own11)] <- 0  # not missing information, but not in independent owning
ind$inde_owning_11[ind$ref11==1 & ind$own11==1] <- 1  # independent owning (head/wife status + owning)

ind$inde_owning_13 <- NA
ind$inde_owning_13[!(ind$ref13==1 & ind$own13==1) & !is.na(ind$ref13) & !is.na(ind$own13)] <- 0  # not missing information, but not in independent owning
ind$inde_owning_13[ind$ref13==1 & ind$own13==1] <- 1  # independent owning (head/wife status + owning)

ind$inde_owning_15 <- NA
ind$inde_owning_15[!(ind$ref15==1 & ind$own15==1) & !is.na(ind$ref15) & !is.na(ind$own15)] <- 0  # not missing information, but not in independent owning
ind$inde_owning_15[ind$ref15==1 & ind$own15==1] <- 1  # independent owning (head/wife status + owning)

ind$inde_owning_17 <- NA
ind$inde_owning_17[!(ind$ref17==1 & ind$own17==1) & !is.na(ind$ref17) & !is.na(ind$own17)] <- 0  # not missing information, but not in independent owning
ind$inde_owning_17[ind$ref17==1 & ind$own17==1] <- 1  # independent owning (head/wife status + owning)

## non-independent-renting and non-independent-owning (namely, the information is there, but the person is not in the previous two statuses)
ind$status_05 <- NA
ind$status_05[ind$inde_renting_05==1] <- 1  # independent renting
ind$status_05[ind$inde_owning_05==1] <- 2  # independent owning
ind$status_05[!is.na(ind$inde_renting_05) & !is.na(ind$inde_owning_05) & ind$inde_renting_05!=1 & ind$inde_owning_05!=1] <- 0  # neither. but have valid information 
# (four possibilities corresponding to status 2)
# 1. head/wife status, neither renting mor owning
# 2. non-head/wife status, renting 
# 3. non-head/wife status, owning
# 4. non-head/wife status, neither renting nor owning 
# note that I've checked and this indeed works. The reason is as long as both the individual and the family are interviewed in each given year, head/wife status and housing status do NOT have any NA in the original dataset. 
# Hence, there are only six possible combinations of the housing variable and the head/wife variable for interviewed individuals and families. Apart from independent renting and independent owning, all the four possibilies are "non" status. 

ind$status_07 <- NA
ind$status_07[ind$inde_renting_07==1] <- 1  # independent renting
ind$status_07[ind$inde_owning_07==1] <- 2  # independent owning
ind$status_07[!is.na(ind$inde_renting_07) & !is.na(ind$inde_owning_07) & ind$inde_renting_07!=1 & ind$inde_owning_07!=1] <- 0  # neither. but have valid information 

ind$status_09 <- NA
ind$status_09[ind$inde_renting_09==1] <- 1  # independent renting
ind$status_09[ind$inde_owning_09==1] <- 2  # independent owning
ind$status_09[!is.na(ind$inde_renting_09) & !is.na(ind$inde_owning_09) & ind$inde_renting_09!=1 & ind$inde_owning_09!=1] <- 0  # neither. but have valid information 

ind$status_11 <- NA
ind$status_11[ind$inde_renting_11==1] <- 1  # independent renting
ind$status_11[ind$inde_owning_11==1] <- 2  # independent owning
ind$status_11[!is.na(ind$inde_renting_11) & !is.na(ind$inde_owning_11) & ind$inde_renting_11!=1 & ind$inde_owning_11!=1] <- 0  # neither. but have valid information 

ind$status_13 <- NA
ind$status_13[ind$inde_renting_13==1] <- 1  # independent renting
ind$status_13[ind$inde_owning_13==1] <- 2  # independent owning
ind$status_13[!is.na(ind$inde_renting_13) & !is.na(ind$inde_owning_13) & ind$inde_renting_13!=1 & ind$inde_owning_13!=1] <- 0  # neither. but have valid information 

ind$status_15 <- NA
ind$status_15[ind$inde_renting_15==1] <- 1  # independent renting
ind$status_15[ind$inde_owning_15==1] <- 2  # independent owning
ind$status_15[!is.na(ind$inde_renting_15) & !is.na(ind$inde_owning_15) & ind$inde_renting_15!=1 & ind$inde_owning_15!=1] <- 0  # neither. but have valid information 

ind$status_17 <- NA
ind$status_17[ind$inde_renting_17==1] <- 1  # independent renting
ind$status_17[ind$inde_owning_17==1] <- 2  # independent owning
ind$status_17[!is.na(ind$inde_renting_17) & !is.na(ind$inde_owning_17) & ind$inde_renting_17!=1 & ind$inde_owning_17!=1] <- 0  # neither. but have valid information 

### time constant variables ###

## pid ##
df$pid <- (df$ER30001 * 1000) + df$ER30002
ind$pid <- (ind$ER30001 * 1000) + ind$ER30002

df <- merge(df, ind, by = "pid", all.x = T)

length(unique(df$pid)) == nrow(df)  # True

# only keep the original CDS cohort members to ensure there is no left-censoring and full information for everybody
# (TAS 2017 included people who enter the TAS after age 18)
# only the original CDS cohort members have full set of covariates 
df <- df[!df$TA171988 %in% 0,] # from 4058 to 2942

## sex ##
df$male <- NA
df$male[df$ER32000==1] <- 1
df$male[df$ER32000==2] <- 0
table(df$male)

## birth year and month ##
df$byear <- NA
df$bmonth <- NA

# first use birth year and month recorded in the last survey year (2017), then replace it with 
# earlier records in reversed temporal order if the 2017 record is missing. 
# Note that records are sometimes updated in later waves, so starting from the last wave makes sense.

df$byear <- df$ER34506
df$bmonth <- df$ER34505

# these variables are from each wave of TAS, starting from the first wave in 2005
var_y <- c("ER34307", "ER34206","ER34106","ER34006","ER33906","ER33806")
var_m <- c("ER34306", "ER34205","ER34105","ER34005","ER33905","ER33805")

for (i in 1:length(var_y)) {
  
  df$byear[df$byear==0] <- unlist(df[df$byear==0, var_y[i]])
  df$bmonth[df$bmonth==0] <- unlist(df[df$bmonth==0, var_m[i]])
  
}

table(df$byear)
table(df$bmonth)

## race ##
# 1: White; 2: Black; 3: Other
# Note that in the coded variable, white and black refer to non-hispanic white and black
# If "don't know" or "refused to answer" either the race question or the hispanicity question, then the variable is coded NA

# wave 1
# first get the race and ethnicity information from each wave, because respondents are asked more than once. 
df$race_1 <- NA

# start from the last mention and work backwards 
df$race_1[df$TA050886==1] <- 1
df$race_1[df$TA050886==2] <- 2
df$race_1[df$TA050886%in%3:7] <- 3  
table(df$race_1, useNA = "always")

# if the last mention doesn't give concrete information, then use the second last mention
df$race_1[df$TA050885==1 & is.na(df$race_1)] <- 1
df$race_1[df$TA050885==2 & is.na(df$race_1)] <- 2
df$race_1[df$TA050885%in%3:7 & is.na(df$race_1)] <- 3

# then use the values from the third last mention, which in this case is the first mention 
df$race_1[df$TA050884==1 & is.na(df$race_1)] <- 1
df$race_1[df$TA050884==2 & is.na(df$race_1)] <- 2
df$race_1[df$TA050884%in%3:7 & is.na(df$race_1)] <- 3

# Then need to take into account hispanicity
df$race_1[df$TA050883%in%8:9] <- NA # if don't know or refused to answer hispanicity, code race to NA
df$race_1[df$TA050883%in%1:7] <- 3  # if is hispanic, then code race to be "other"

table(df$race_1, useNA = "always")
table(df$tas_year_1, useNA = "always")
sum(is.na(df$race_1))-sum(is.na(df$tas_year_1)) 
sum(!is.na(df$tas_year_1))
sum(df$race_1%in%1:2)
# Hence, out of 745 respondents in TAS first wave, 4 don't have valid race information. 
# In wave 1, there are 649 non-hispanic Blacks and Whites

# wave 2
df$race_2 <- NA

df$race_2[df$TA070867==1] <- 1
df$race_2[df$TA070867==2] <- 2
df$race_2[df$TA070867%in%3:7] <- 3

df$race_2[df$TA070866==1 & is.na(df$race_2)] <- 1
df$race_2[df$TA070866==2 & is.na(df$race_2)] <- 2
df$race_2[df$TA070866%in%3:7 & is.na(df$race_2)] <- 3

df$race_2[df$TA070865==1 & is.na(df$race_2)] <- 1
df$race_2[df$TA070865==2 & is.na(df$race_2)] <- 2
df$race_2[df$TA070865%in%3:7 & is.na(df$race_2)] <- 3

df$race_2[df$TA070864%in%8:9] <- NA 
df$race_2[df$TA070864%in%1:7] <- 3 

table(df$race_2, useNA = "always")
table(df$tas_year_2, useNA = "always")
sum(is.na(df$race_2))-sum(is.na(df$tas_year_2)) 
sum(!is.na(df$tas_year_2))
sum(df$race_2%in%1:2)
# Hence, out of 1115 respondents in TAS second wave, 4 don't have valid race information.
# In wave 2, there are 968 non-hispanic Blacks and Whites

# wave 3
df$race_3 <- NA

df$race_3[df$TA090927==1] <- 1
df$race_3[df$TA090927==2] <- 2
df$race_3[df$TA090927%in%3:7] <- 3

df$race_3[df$TA090926==1 & is.na(df$race_3)] <- 1
df$race_3[df$TA090926==2 & is.na(df$race_3)] <- 2
df$race_3[df$TA090926%in%3:7 & is.na(df$race_3)] <- 3

df$race_3[df$TA090925==1 & is.na(df$race_3)] <- 1
df$race_3[df$TA090925==2 & is.na(df$race_3)] <- 2
df$race_3[df$TA090925%in%3:7 & is.na(df$race_3)] <- 3

df$race_3[df$TA090924%in%8:9] <- NA 
df$race_3[df$TA090924%in%1:7] <- 3 

table(df$race_3, useNA = "always")
table(df$tas_year_3, useNA = "always")
sum(is.na(df$race_3))-sum(is.na(df$tas_year_3)) 
sum(!is.na(df$tas_year_3))
sum(df$race_3%in%1:2)
# Hence, out of 1554 respondents in TAS third wave, 7 don't have valid race information. 
# In wave 3, there are 1249 non-hispanic Blacks and Whites

# wave 4
df$race_4 <- NA

df$race_4[df$TA111059==1] <- 1
df$race_4[df$TA111059==2] <- 2
df$race_4[df$TA111059%in%3:7] <- 3

df$race_4[df$TA111058==1 & is.na(df$race_4)] <- 1
df$race_4[df$TA111058==2 & is.na(df$race_4)] <- 2
df$race_4[df$TA111058%in%3:7 & is.na(df$race_4)] <- 3

df$race_4[df$TA111057==1 & is.na(df$race_4)] <- 1
df$race_4[df$TA111057==2 & is.na(df$race_4)] <- 2
df$race_4[df$TA111057%in%3:7 & is.na(df$race_4)] <- 3

df$race_4[df$TA111056%in%8:9] <- NA 
df$race_4[df$TA111056%in%1:7] <- 3 

table(df$race_4, useNA = "always")
table(df$tas_year_4, useNA = "always")
sum(is.na(df$race_4))-sum(is.na(df$tas_year_4)) 
sum(!is.na(df$tas_year_4))
sum(df$race_4%in%1:2)
# Hence, out of 1907 respondents in TAS fourth wave, 6 don't have valid race information. 
# In wave 4, there are 1582 non-hispanic Blacks and Whites

# wave 5
df$race_5 <- NA

df$race_5[df$TA131094==1] <- 1
df$race_5[df$TA131094==2] <- 2
df$race_5[df$TA131094%in%3:7] <- 3

df$race_5[df$TA131093==1 & is.na(df$race_5)] <- 1
df$race_5[df$TA131093==2 & is.na(df$race_5)] <- 2
df$race_5[df$TA131093%in%3:7 & is.na(df$race_5)] <- 3

df$race_5[df$TA131092==1 & is.na(df$race_5)] <- 1
df$race_5[df$TA131092==2 & is.na(df$race_5)] <- 2
df$race_5[df$TA131092%in%3:7 & is.na(df$race_5)] <- 3

df$race_5[df$TA131091%in%8:9] <- NA 
df$race_5[df$TA131091%in%1:7] <- 3 

table(df$race_5, useNA = "always")
table(df$tas_year_5, useNA = "always")
sum(is.na(df$race_5))-sum(is.na(df$tas_year_5)) 
sum(!is.na(df$tas_year_5))
sum(df$race_5%in%1:2)
# Hence, out of 1804 respondents in TAS fifth wave, 11 don't have valid race information. 
# In wave 5, there are 1476 non-hispanic Blacks and Whites

# wave 6
df$race_6 <- NA

df$race_6[df$TA151134==1] <- 1
df$race_6[df$TA151134==2] <- 2
df$race_6[df$TA151134%in%3:7] <- 3

df$race_6[df$TA151133==1 & is.na(df$race_6)] <- 1
df$race_6[df$TA151133==2 & is.na(df$race_6)] <- 2
df$race_6[df$TA151133%in%3:7 & is.na(df$race_6)] <- 3

df$race_6[df$TA151132==1 & is.na(df$race_6)] <- 1
df$race_6[df$TA151132==2 & is.na(df$race_6)] <- 2
df$race_6[df$TA151132%in%3:7 & is.na(df$race_6)] <- 3

df$race_6[df$TA151131%in%8:9] <- NA 
df$race_6[df$TA151131%in%1:7] <- 3 

table(df$race_6, useNA = "always")
table(df$tas_year_6, useNA = "always")
sum(is.na(df$race_6))-sum(is.na(df$tas_year_6)) 
sum(!is.na(df$tas_year_6))
sum(df$race_6%in%1:2)
# Hence, out of 1641 respondents in TAS sixth wave, 11 don't have valid race information.
# In wave 6, there are 1321 non-hispanic Blacks and Whites

# wave 7
# note that wave 7 (2017) changes the questionaires 
# and asks the race question for five times and merges hispanicity into the race variable
df$race_7 <- NA

df$race_7[df$TA171959==1] <- 1
df$race_7[df$TA171959==3] <- 2
df$race_7[df$TA171959%in%c(2,4:8)] <- 3

df$race_7[df$TA171958==1 & is.na(df$race_7)] <- 1
df$race_7[df$TA171958==3 & is.na(df$race_7)] <- 2
df$race_7[df$TA171958%in%c(2,4:8) & is.na(df$race_7)] <- 3

df$race_7[df$TA171957==1 & is.na(df$race_7)] <- 1
df$race_7[df$TA171957==3 & is.na(df$race_7)] <- 2
df$race_7[df$TA171957%in%c(2,4:8) & is.na(df$race_7)] <- 3

df$race_7[df$TA171956==1 & is.na(df$race_7)] <- 1
df$race_7[df$TA171956==3 & is.na(df$race_7)] <- 2
df$race_7[df$TA171956%in%c(2,4:8) & is.na(df$race_7)] <- 3

df$race_7[df$TA171955==1 & is.na(df$race_7)] <- 1
df$race_7[df$TA171955==3 & is.na(df$race_7)] <- 2
df$race_7[df$TA171955%in%c(2,4:8) & is.na(df$race_7)] <- 3

table(df$race_7, useNA = "always")
table(df$tas_year_7, useNA = "always")
sum(is.na(df$race_7))-sum(is.na(df$tas_year_7)) 
sum(!is.na(df$tas_year_7))
sum(df$race_7%in%1:2)
# Hence, out of 2526 respondents in TAS seventh wave, 15 don't have valid race information.
# In wave 7, there are 2009 non-hispanic Blacks and Whites

# View(df[,c("pid","race_7","race_6","race_5","race_4","race_3","race_2","race_1")])
# View(df[df$pid==4041,c("pid","TA171955","race_7","race_6","race_5","race_4","race_3","race_2","race_1")])

# haven't checked how many people changed their racial identities

# now, similar to birth year and month, construct a time-constant race variable in a backwards way
df$race <- df$race_7
df$race[is.na(df$race)] <- df$race_6[is.na(df$race)]
df$race[is.na(df$race)] <- df$race_5[is.na(df$race)]
df$race[is.na(df$race)] <- df$race_4[is.na(df$race)]
df$race[is.na(df$race)] <- df$race_3[is.na(df$race)]
df$race[is.na(df$race)] <- df$race_2[is.na(df$race)]
df$race[is.na(df$race)] <- df$race_1[is.na(df$race)]
table(df$race, useNA = "always")  # 10 NAs in the end


### time varying variables ###
# Index note:
# The index for each variable denotes the number of wave. 
# 1: 2005; 2:2007; 3:2009; 4:2011; 5:2013; 6:2015; 7:2017

## interview date for each wave of TAS ##
# note that the variable names for the seventh wave are correct, because TAS changed the coding scheme.
df$tas_year_7 <- df$TA170011
df$tas_year_6 <- df$TA150009
df$tas_year_5 <- df$TA130009
df$tas_year_4 <- df$TA110009
df$tas_year_3 <- df$TA090009
df$tas_year_2 <- df$TA070009
df$tas_year_1 <- df$TA050009

df$tas_month_7 <- df$TA170009
df$tas_month_6 <- df$TA150007
df$tas_month_5 <- df$TA130007
df$tas_month_4 <- df$TA110007
df$tas_month_3 <- df$TA090007
df$tas_month_2 <- df$TA070007
df$tas_month_1 <- df$TA050007

## interview date for each wave of PSID family survery from 2005 to 2017 ##
df$psid_year_7 <- df$ER66014
df$psid_year_6 <- df$ER60014
df$psid_year_5 <- df$ER53014
df$psid_year_4 <- df$ER47314
df$psid_year_3 <- df$ER42014
df$psid_year_2 <- df$ER36014
df$psid_year_1 <- df$ER25014

df$psid_month_7 <- df$ER66012
df$psid_month_6 <- df$ER60012
df$psid_month_5 <- df$ER53012
df$psid_month_4 <- df$ER53012
df$psid_month_3 <- df$ER42012
df$psid_month_2 <- df$ER36012
df$psid_month_1 <- df$ER25012

## the wave at which the respondent made the first independent renting transition
# (I checked. Using inde_renting/inde_owning and status to construct retning_wave and owning_wave will produce the same results)
df$renting_wave <- NA
df$renting_wave[(df$inde_renting_17%in%1) & !(df$inde_renting_15%in%1) & !(df$inde_renting_13%in%1) & !(df$inde_renting_11%in%1) & !(df$inde_renting_09%in%1) & !(df$inde_renting_07%in%1) & !(df$inde_renting_05%in%1)] <- 7
df$renting_wave[(df$inde_renting_15%in%1) & !(df$inde_renting_13%in%1) & !(df$inde_renting_11%in%1) & !(df$inde_renting_09%in%1) & !(df$inde_renting_07%in%1) & !(df$inde_renting_05%in%1)] <- 6
df$renting_wave[(df$inde_renting_13%in%1) & !(df$inde_renting_11%in%1) & !(df$inde_renting_09%in%1) & !(df$inde_renting_07%in%1) & !(df$inde_renting_05%in%1)] <- 5
df$renting_wave[(df$inde_renting_11%in%1) & !(df$inde_renting_09%in%1) & !(df$inde_renting_07%in%1) & !(df$inde_renting_05%in%1)] <- 4
df$renting_wave[(df$inde_renting_09%in%1) & !(df$inde_renting_07%in%1) & !(df$inde_renting_05%in%1)] <- 3
df$renting_wave[(df$inde_renting_07%in%1) & !(df$inde_renting_05%in%1)] <- 2
df$renting_wave[(df$inde_renting_05%in%1)] <- 1
table(df$renting_wave)
sum(table(df$renting_wave)) # 1706 made the idnependent renting transition cumulatively

## the wave at which the respondent made the first home-ownership transition
df$owning_wave <- NA
df$owning_wave[(df$inde_owning_17%in%1) & !(df$inde_owning_15%in%1) & !(df$inde_owning_13%in%1) & !(df$inde_owning_11%in%1) & !(df$inde_owning_09%in%1) & !(df$inde_owning_07%in%1) & !(df$inde_owning_05%in%1)] <- 7
df$owning_wave[(df$inde_owning_15%in%1) & !(df$inde_owning_13%in%1) & !(df$inde_owning_11%in%1) & !(df$inde_owning_09%in%1) & !(df$inde_owning_07%in%1) & !(df$inde_owning_05%in%1)] <- 6
df$owning_wave[(df$inde_owning_13%in%1) & !(df$inde_owning_11%in%1) & !(df$inde_owning_09%in%1) & !(df$inde_owning_07%in%1) & !(df$inde_owning_05%in%1)] <- 5
df$owning_wave[(df$inde_owning_11%in%1) & !(df$inde_owning_09%in%1) & !(df$inde_owning_07%in%1) & !(df$inde_owning_05%in%1)] <- 4
df$owning_wave[(df$inde_owning_09%in%1) & !(df$inde_owning_07%in%1) & !(df$inde_owning_05%in%1)] <- 3
df$owning_wave[(df$inde_owning_07%in%1) & !(df$inde_owning_05%in%1)] <- 2
df$owning_wave[(df$inde_owning_05%in%1)] <- 1
table(df$owning_wave)
sum(table(df$owning_wave)) # 660 made the ownership transition cumulatively

## previously has had independent renting
df$prev_inde_renting_07 <- 0
df$prev_inde_renting_07[df$inde_renting_05==1] <- 1
df$prev_inde_renting_09 <- 0
df$prev_inde_renting_09[df$inde_renting_05==1 | df$inde_renting_07==1] <- 1
df$prev_inde_renting_11 <- 0
df$prev_inde_renting_11[df$inde_renting_05==1 | df$inde_renting_07==1 | df$inde_renting_09==1] <- 1
df$prev_inde_renting_13 <- 0
df$prev_inde_renting_13[df$inde_renting_05==1 | df$inde_renting_07==1 | df$inde_renting_09==1 | df$inde_renting_11==1] <- 1
df$prev_inde_renting_15 <- 0
df$prev_inde_renting_15[df$inde_renting_05==1 | df$inde_renting_07==1 | df$inde_renting_09==1 | df$inde_renting_11==1 | df$inde_renting_13==1] <- 1
df$prev_inde_renting_17 <- 0
df$prev_inde_renting_17[df$inde_renting_05==1 | df$inde_renting_07==1 | df$inde_renting_09==1 | df$inde_renting_11==1 | df$inde_renting_13==1 | df$inde_renting_15==1] <- 1

## previously has had independent owning
df$prev_inde_owning_07 <- 0
df$prev_inde_owning_07[df$inde_owning_05==1] <- 1
df$prev_inde_owning_09 <- 0
df$prev_inde_owning_09[df$inde_owning_05==1 | df$inde_owning_07==1] <- 1
df$prev_inde_owning_11 <- 0
df$prev_inde_owning_11[df$inde_owning_05==1 | df$inde_owning_07==1 | df$inde_owning_09==1] <- 1
df$prev_inde_owning_13 <- 0
df$prev_inde_owning_13[df$inde_owning_05==1 | df$inde_owning_07==1 | df$inde_owning_09==1 | df$inde_owning_11==1] <- 1
df$prev_inde_owning_15 <- 0
df$prev_inde_owning_15[df$inde_owning_05==1 | df$inde_owning_07==1 | df$inde_owning_09==1 | df$inde_owning_11==1 | df$inde_owning_13==1] <- 1
df$prev_inde_owning_17 <- 0
df$prev_inde_owning_17[df$inde_owning_05==1 | df$inde_owning_07==1 | df$inde_owning_09==1 | df$inde_owning_11==1 | df$inde_owning_13==1 | df$inde_owning_15==1] <- 1


### set up the long data form

# first only keep the variables in use
df_inuse <- df[,c("pid","male","byear","bmonth","race","owning_wave","renting_wave",
              "ref05","ref07","ref09","ref11","ref13","ref15","ref17",
              "own05","own07","own09","own11","own13","own15","own17",
              "inde_renting_17","inde_renting_15","inde_renting_13","inde_renting_11","inde_renting_09","inde_renting_07","inde_renting_05",
              "inde_owning_17","inde_owning_15","inde_owning_13","inde_owning_11","inde_owning_09","inde_owning_07","inde_owning_05",
              "status_05","status_07","status_09","status_11","status_13","status_15","status_17",
              "psid_year_1","psid_year_2","psid_year_3","psid_year_4","psid_year_5","psid_year_6","psid_year_7", 
              "psid_month_1","psid_month_2","psid_month_3","psid_month_4","psid_month_5","psid_month_6","psid_month_7",
              "tas_year_1","tas_year_2","tas_year_3","tas_year_4","tas_year_5","tas_year_6","tas_year_7", 
              "tas_month_1","tas_month_2","tas_month_3","tas_month_4","tas_month_5","tas_month_6","tas_month_7"
              )]

# then generate the time-varting variable names in long form
time_varying_long <- c("ref", "psid_year", "psid_month", "tas_year", "tas_month","inde_renting","inde_owning","status")

# get the corresponding variable names in wide form
time_varying_wide <- lapply(time_varying_long, function(x) grep(x, colnames(df_inuse), value=T))

# use the reshape command the get the long-form data  
df_long <- reshape(df_inuse, 
                   varying=time_varying_wide, 
                   v.names=time_varying_long,
                   idvar="pid",
                   timevar="wave",
                   direction="long")

df_long <- df_long[order(df_long$pid),]

## age at TAS interview ##
# first recode the interview month and birth month to decimalism
df_long$bmonth_r <- df_long$bmonth/12
df_long$psid_month_r <- df_long$psid_month/12

# then generate composite times for interview and birth
df_long$birth_time <- df_long$byear + df_long$bmonth_r 
df_long$int_time <- df_long$psid_year + df_long$psid_month_r

# take the difference (what's age at interview in terms of month?) and divid by 12
df_long$age_inmonth <- df_long$int_time - df_long$birth_time
df_long$age <- as.integer(df_long$age_inmonth)
table(df_long$age, useNA = "always")

# View(df_long[,c("pid","age","psid_year","tas_year")])

# only keep person-years when the repsondent is older than 18
df_long <- df_long[df_long$age>=18 & !is.na(df_long$age),] # from 20594 to 13495. This step also dropps all person-years that are not in interview

# View(df_long[,c("pid","age","status")])

## gap in status record
# for the sake of control for interview spacing in the discrete-time EHA, I need to construct a variable indicating whether there has been a gap in record and how long the gap is. 
table(df_long$status, useNA = "always")
# First, there is nobody who has NAs in any year
# the spacing value for the first interview is the gap between age 18 and age at first interview
# for later interviews (given the respondent is observed for more than once), the spacing value is the gap between this interview and the last interview
df_long$gap <- NA
for (i in 1:length(unique(df_long$pid))) {
  
  status_vector <- df_long$status[df_long$pid==unique(df_long$pid)[i]] 
  gap_vector <- rep(NA, length(status_vector))
  gap_vector[1] <- df_long$age_inmonth[df_long$pid==unique(df_long$pid)[i]][1]-18
  
  if (length(status_vector)>1) {
    
    for (j in 2:length(status_vector)) {
      gap_vector[j] <- df_long$age_inmonth[df_long$pid==unique(df_long$pid)[i]][j]-df_long$age_inmonth[df_long$pid==unique(df_long$pid)[i]][j-1]
    }
  }
  df_long$gap[df_long$pid==unique(df_long$pid)[i]] <- gap_vector
}
summary(df_long$gap)
hist(df_long$gap)

View(df_long[df_long$pid%in%df_long$pid[df_long$gap>5],c("pid","age","status","gap")])




# View(df_long[,c("pid","age","status")])








# only keep person-years with valid outcome status
df_long <- df_long[!is.na(df_long$status),]  # from 14566 to 10667

# only keep Blacks and Whites
df_long <- df_long[df_long$race%in%c(1,2),] # from 10667 to 8807
# then generate a black vs white dummy
df_long$black <- df_long$race

sum(is.na(df_long$age_tas_int)) # check. zero NA for age at interview

# View(df_long[,c("pid","wave","ownership_wave","housing")])

table(df_long$ownership_wave)
sum(table(df_long$ownership_wave)) # 1311
# only keep wave that are or before the wave the respondent made the first-time homeownership transition and person-waves for people who have neve made the transition
# if df_long$wave=0, the person has never made the transition
df_long <- df_long[df_long$wave<=df_long$ownership_wave | is.na(df_long$ownership_wave),] # from 8807 to 8512
sum(table(df_long$ownership_wave))

## indicator for homeownership as in the EHA setting
df_long$ownership <- NA
df_long$ownership[is.na(df_long$ownership_wave)] <- 0 # people who've never made the transition to homeownership
df_long$ownership[df_long$wave==df_long$ownership_wave & !is.na(df_long$ownership_wave)] <- 1  # wave of the transition
df_long$ownership[df_long$wave<df_long$ownership_wave & !is.na(df_long$ownership_wave)] <- 0 # waves before the transition
table(df_long$ownership)
# 0: 7337; 1:321
table(df_long$ownership)[2]/nrow(df_long)  # fraction of ownership person-years

# View(df_long[,c("pid","wave","ownership_wave","housing","ownership")])

# what happens to people who reach age 28 but do not establish economic independence. 
# will they only be a non-reference-person in the main file?
# need to download 2013\2015\2017 PSID family files (2013 should be the first year some TAS respondents reach 28)
table(df_long$headwife[df_long$age==28])
table(df_long$headwife[df_long$age==27])

##### models

# format factor variables
factor_var <- c("black","wave","age")

for (i in 1:length(factor_var)) {
  df_long[,colnames(df_long)%in%factor_var[i]] <- as.factor(df_long[,colnames(df_long)%in%factor_var[i]])
}

class(df_long$black)

model <- glm(ownership ~ black + wave + age, data = df_long, family = binomial(link = "logit"))

summary(model)

exp(coef(model))



### section to revisit
table(df_long$age)
df_long$age_group <- NA
3 + 800 + 1118 
df_long$age_group[df_long$age_tas_int%in%c(18,19,20)] <- 1
1128 + 971
df_long$age_group[df_long$age_tas_int%in%c(21,22)] <- 2
df_long$age_group[df_long$age_tas_int%in%c(23,24)] <- 3
df_long$age_group[df_long$age_tas_int%in%c(25,26)] <- 4
566 + 503 + 169 +  4 
df_long$age_group[df_long$age_tas_int%in%c(27,28,29,30)] <- 5
df_long$age_group <- as.factor(df_long$age_group)
table(df_long$age_group, useNA = "always")
###
